import os
import google.generativeai as genai
from dotenv import load_dotenv
import locale
from datetime import datetime

load_dotenv()
api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    raise ValueError("GEMINI_API_KEY не найден в файле backend/.env")

genai.configure(api_key=api_key)
model = genai.GenerativeModel('gemini-1.5-flash')

# Настройка для форматирования чисел
try:
    locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
except locale.Error:
    print("Локаль ru_RU.UTF-8 не найдена, используется стандартная.")

def format_currency(amount: float) -> str:
    """Форматирует число в денежный формат: 1 250 ₸"""
    return f"{int(amount):,} ₸".replace(",", " ")


def generate_push_notification(product_name: str, full_data: dict, benefit: float) -> str:
    """
    Генерирует персонализированное уведомление с помощью Gemini,
    следуя строгим правилам и контексту.
    """
    profile = full_data['profile']
    metrics = full_data['metrics']
    
    if locale.getlocale()[0] is None:
        locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
    current_month = datetime.now().strftime('%B').lower() 

    # Собираем контекст о клиенте
    client_context = (
        f"- Имя: {profile['name']}\n"
        f"- Возраст: {profile['age']}\n"
        f"- Топ-3 категории трат: {', '.join([c['category'] for c in metrics['top_categories']])}"
    )

    prompt = f"""
Ты — маркетолог и копирайтер в банке. Твоя задача — написать идеальное push-уведомление, строго следуя всем правилам.

**# КОНТЕКСТ О КЛИЕНТЕ:**
{client_context}

**# ЗАДАЧА:**
- Продукт для предложения: **{product_name}**
- Рассчитанная выгода для клиента (за 3 мес.): **{format_currency(benefit)}**
- Контекст для персонализации: сейчас **{current_month}**.

**# ПРАВИЛА (НЕУКОСНИТЕЛЬНОЕ ИСПОЛНЕНИЕ):**
1.  **Структура:** Сообщение должно состоять из трёх частей:
    -   Сначала **персональный контекст**: начни с наблюдения о тратах или поведении клиента (например, "заметили, что в {current_month} вы часто ездили на такси...").
    -   Затем **польза и продукт**: объясни, как "{product_name}" решает задачу и какую выгоду ({format_currency(benefit)}) он бы принёс.
    -   В конце **призыв к действию**: используй глагол ("Открыть", "Оформить", "Настроить").
2.  **Tone of Voice:**
    -   Обращение: **строго на "вы"** с маленькой буквы, по имени. Имя пишется с заглавной.
    -   Стиль: простой, доброжелательный, человечный. Без канцеляризмов ("данная карта позволяет...").
    -   Для молодых клиентов (младше 25 лет) можно чуть более живой тон, но без жаргона.
3.  **Редполитика:**
    -   **Длина:** СТРОГО от 180 до 220 символов.
    -   **Форматирование:** Числа с пробелами-разрядами, валюта — "₸". Пример: `14 500 ₸`.
    -   **Эмодзи:** РОВНО один уместный эмодзи в самом конце. Если эмодзи не нужен, не ставь его.
    -   **ЗАПРЕЩЕНО:** Использовать CAPS LOCK, "крикливые" обещания, более одного восклицательного знака.

**# ПРИМЕРЫ ИДЕАЛЬНЫХ УВЕДОМЛЕНИЙ:**
-   **Пример 1:** "Рамазан, в августе вы сделали 12 поездок на такси на 27 400 ₸. С картой для путешествий вернули бы ≈1 100 ₸. Откройте карту в приложении."
-   **Пример 2:** "Алия, у вас высокий остаток на счету, и это дает большие возможности. Премиальная карта даст до 4% кешбэка на все покупки и бесплатные снятия. Подключите сейчас."
-   **Пример 3:** "{profile['name']}, ваши топ-категории — {', '.join([c['category'] for c in metrics['top_categories']])}. Кредитная карта даёт до 10% в любимых категориях. Оформить карту."

**Напиши только финальный текст уведомления и ничего более.**
"""
    
    try:
        response = model.generate_content(prompt)
        return response.text.strip().replace('"', '') # Убираем кавычки, если модель их добавит
    except Exception as e:
        print(f"Ошибка при вызове Gemini API: {e}")
        return f"{profile['name']}, у нас есть выгодное предложение по продукту '{product_name}'. Узнайте подробности в приложении."