import pandas as pd
import locale

# –£—Å—Ç–∞–Ω–æ–≤–∏–º —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
try:
    locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
except locale.Error:
    print("–õ–æ–∫–∞–ª—å ru_RU.UTF-8 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è.")

def format_currency(amount: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –≤ –¥–µ–Ω–µ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ –∑–Ω–∞–∫–æ–º —Ç–µ–Ω–≥–µ."""
    # locale.format_string –Ω–µ –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º f-string
    return f"{int(amount):,} ‚Ç∏".replace(",", " ")

# ===================================================================
# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
# ===================================================================

def _generate_for_travel_card(data: dict, benefit: float) -> str:
    name = data['profile']['name']
    transactions = data['transactions_df']
    
    # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    taxi_spending = transactions[transactions['category'] == '–¢–∞–∫—Å–∏']['amount'].sum()
    taxi_rides = len(transactions[transactions['category'] == '–¢–∞–∫—Å–∏'])
    
    if taxi_rides > 3:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ —Ç–∞–∫—Å–∏, –¥–µ–ª–∞–µ–º –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –Ω–∏—Ö
        return f"{name}, –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞ –≤—ã —Å–æ–≤–µ—Ä—à–∏–ª–∏ {taxi_rides} –ø–æ–µ–∑–¥–æ–∫ –Ω–∞ —Ç–∞–∫—Å–∏ –Ω–∞ {format_currency(taxi_spending)}. –° –∫–∞—Ä—Ç–æ–π –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –≤–µ—Ä–Ω—É–ª–∏ –±—ã ‚âà {format_currency(benefit)}. –û—Ç–∫—Ä–æ–π—Ç–µ –µ—ë –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. üöï"
    else:
        # –û–±—â–∏–π —à–∞–±–ª–æ–Ω, –µ—Å–ª–∏ —Ç–∞–∫—Å–∏ –Ω–µ –æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
        return f"{name}, –∑–∞–º–µ—Ç–∏–ª–∏ –≤–∞—à–∏ —Ç—Ä–∞—Ç—ã –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –° –Ω–∞—à–µ–π —Ç—Ä–µ–≤–µ–ª-–∫–∞—Ä—Ç–æ–π –≤—ã –º–æ–≥–ª–∏ –±—ã –≤–µ—Ä–Ω—É—Ç—å {format_currency(benefit)} –∫–µ—à–±—ç–∫–æ–º. –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å?"

def _generate_for_premium_card(data: dict, benefit: float) -> str:
    name = data['profile']['name']
    balance_str = format_currency(data['profile']['avg_monthly_balance_KZT'])
    
    return f"{name}, –≤–∞—à —Å—Ä–µ–¥–Ω–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ ‚Äî {balance_str}. –ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ –¥–∞—Å—Ç –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π –∫–µ—à–±—ç–∫ –¥–æ 4% –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–Ω—è—Ç–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –í–∞—à–∞ –≤—ã–≥–æ–¥–∞ –º–æ–≥–ª–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å {format_currency(benefit)}. ‚ú®"

def _generate_for_credit_card(data: dict, benefit: float) -> str:
    name = data['profile']['name']
    top_categories = [cat['category'] for cat in data['metrics']['top_categories']]
    
    # –î–µ–ª–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    if len(top_categories) >= 3:
        cat_str = f"{top_categories[0]}, {top_categories[1]} –∏ {top_categories[2]}"
    else:
        cat_str = ", ".join(top_categories)
        
    return f"{name}, –≤–∞—à–∏ —Ç–æ–ø-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî {cat_str}. –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ –¥–∞—ë—Ç –¥–æ 10% –∫–µ—à–±—ç–∫–∞ –≤ –ª—é–±–∏–º—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö. –° –Ω–µ–π –≤—ã –±—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ {format_currency(benefit)}. –û—Ñ–æ—Ä–º–∏—Ç—å –∫–∞—Ä—Ç—É."

def _generate_for_deposit(data: dict, benefit: float) -> str:
    name = data['profile']['name']
    
    return f"{name}, —É –≤–∞—Å –Ω–∞ —Å—á—ë—Ç–µ –æ—Å—Ç–∞—é—Ç—Å—è —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º –≤–∫–ª–∞–¥–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Ö–æ–¥ –¥–æ {format_currency(benefit)} —É–∂–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–≤–∞—Ä—Ç–∞–ª–µ. –û—Ç–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥. üí∞"


# ===================================================================
# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
# ===================================================================

def generate_push_notification(product_name: str, full_data: dict, benefit: float) -> str:
    """
    –í—ã–±–∏—Ä–∞–µ—Ç –Ω—É–∂–Ω—ã–π —à–∞–±–ª–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç.
    """
    # –°–ª–æ–≤–∞—Ä—å-–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä: —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º
    generators = {
        "–ö–∞—Ä—Ç–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π": _generate_for_travel_card,
        "–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞": _generate_for_premium_card,
        "–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞": _generate_for_credit_card,
        "–î–µ–ø–æ–∑–∏—Ç –°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π": _generate_for_deposit,
    }
    
    # –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    generator_func = generators.get(product_name)
    
    if generator_func:
        return generator_func(full_data, benefit)
    else:
        # –®–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        return f"{full_data['profile']['name']}, —É –Ω–∞—Å –µ—Å—Ç—å –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É '{product_name}' —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –≤—ã–≥–æ–¥–æ–π {format_currency(benefit)}. –£–∑–Ω–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."