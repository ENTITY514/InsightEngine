import os
import random
import google.generativeai as genai
from dotenv import load_dotenv
import locale
from typing import Dict, Any

load_dotenv()
api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    raise ValueError("GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env")

genai.configure(api_key=api_key)
model = genai.GenerativeModel('gemini-1.5-flash')

try:
    locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
except locale.Error:
    print("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å ru_RU.UTF-8.")

def format_currency(amount: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –∫–∞–∫ –≤–∞–ª—é—Ç—É —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ –∑–Ω–∞–∫–æ–º —Ç–µ–Ω–≥–µ."""
    return f"{int(amount):,} ‚Ç∏".replace(",", " ")

def _create_hook(product_name: str, data: Dict[str, Any]) -> str:
    # ... (–ª–æ–≥–∏–∫–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π) ...
    profile = data['profile']
    metrics = data['metrics']
    transactions = data['transactions_df']

    if product_name in ["–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞", "–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞"]:
        if metrics.get("top_categories"):
            top_cats_list = [cat['category'] for cat in metrics['top_categories'][:3]]
            if top_cats_list:
                return f"–í–∞—à–∏ —Å–∞–º—ã–µ —á–∞—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–∞—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞: {', '.join(top_cats_list)}."

    if product_name == "–ö–∞—Ä—Ç–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π":
        travel_spending = transactions[transactions['category'].isin(['–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–¢–∞–∫—Å–∏', '–û—Ç–µ–ª–∏'])]['amount'].sum()
        if travel_spending > 5000:
            return f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞ –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç–∞–∫—Å–∏, –æ—Ç–µ–ª–∏ –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å–æ—Å—Ç–∞–≤–∏–ª–∏ {format_currency(travel_spending)}."

    if "–î–µ–ø–æ–∑–∏—Ç" in product_name or product_name == "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏":
        balance = profile.get('avg_monthly_balance_KZT', 0)
        if balance > 100000:
            return f"–ú—ã –≤–∏–¥–∏–º, —á—Ç–æ —É –≤–∞—Å –Ω–∞ —Å—á–µ—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ—Å—Ç–∞—é—Ç—Å—è —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ –æ–∫–æ–ª–æ {format_currency(balance)}."
            
    if product_name == "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–≥–æ–¥—ã":
        try:
            current_card_name = transactions['product'].mode()[0]
            return f"–í—ã –∞–∫—Ç–∏–≤–Ω–æ –∏ –≤—ã–≥–æ–¥–Ω–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –≤–∞—à–µ–π –∫–∞—Ä—Ç–æ–π ¬´{current_card_name}¬ª."
        except (KeyError, IndexError):
            return "–í—ã –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏."

    total_spending = metrics.get('total_spending_3m', 0)
    if total_spending > 0:
        return f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ {format_currency(total_spending)}."
        
    return "–ú—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã."

def _generate_fallback_notification(product_name: str, data: Dict[str, Any], benefit: float) -> str:
    """
    –ò–ó–ú–ï–ù–ï–ù–ò–ï: –®–∞–±–ª–æ–Ω—ã –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤—ã–≥–æ–¥—ã –≤ —Ü–∏—Ñ—Ä–∞—Ö.
    """
    name = data['profile'].get('name', '–ö–ª–∏–µ–Ω—Ç')
    top_cats_list = [cat['category'] for cat in data['metrics'].get('top_categories', [])[:3]]
    top_cats_str = ", ".join(top_cats_list)

    templates = {
        "–ö–∞—Ä—Ç–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π": [
            f"{name}, –≤–∞—à–∏ –ø–æ–µ–∑–¥–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –µ—â–µ –≤—ã–≥–æ–¥–Ω–µ–µ. –° —Ç—Ä–µ–≤–µ–ª-–∫–∞—Ä—Ç–æ–π –≤—ã –º–æ–≥–ª–∏ –±—ã –≤–µ—Ä–Ω—É—Ç—å {format_currency(benefit)} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞. ‚úàÔ∏è –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å?",
            f"{name}, –∑–∞–º–µ—Ç–∏–ª–∏ –≤–∞—à–∏ —Ç—Ä–∞—Ç—ã –Ω–∞ —Ç–∞–∫—Å–∏ –∏ –æ—Ç–µ–ª–∏. –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∏—Ö –≤ –≤—ã–≥–æ–¥—É! –° –Ω–∞—à–µ–π –∫–∞—Ä—Ç–æ–π –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –≤—ã –±—ã —Å—ç–∫–æ–Ω–æ–º–∏–ª–∏ {format_currency(benefit)}. –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ.",
            f"–ü—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî –∑–¥–æ—Ä–æ–≤–æ, –∞ —Å –∫–µ—à–±—ç–∫–æ–º ‚Äî –µ—â–µ –ª—É—á—à–µ! {name}, –≤–∞—à–∞ –≤—ã–≥–æ–¥–∞ —Å –∫–∞—Ä—Ç–æ–π –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –º–æ–≥–ª–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å {format_currency(benefit)}. –û—Ç–∫—Ä–æ–π—Ç–µ –µ–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."
        ],
        "–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞": [
            f"{name}, —Å –≤–∞—à–∏–º —Å—Ç–∏–ª–µ–º —Ç—Ä–∞—Ç –ø—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ –º–æ–≥–ª–∞ –±—ã –ø—Ä–∏–Ω–µ—Å—Ç–∏ {format_currency(benefit)} –∑–∞ 3 –º–µ—Å—è—Ü–∞. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –∫–µ—à–±—ç–∫–æ–º –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏! ‚ú® –û—Ñ–æ—Ä–º–∏—Ç—å —Å–µ–π—á–∞—Å.",
            f"–ó–∞–º–µ—Ç–∏–ª–∏ –≤–∞—à–∏ —Ç—Ä–∞—Ç—ã –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö. {name}, —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ–π –≤—ã –±—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π –∫–µ—à–±—ç–∫, –Ω–æ –∏ –≤—ã–≥–æ–¥—É –≤ {format_currency(benefit)}. –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ–π—á–∞—Å.",
            f"{name}, –≤–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ. –ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–æ–º—Ñ–æ—Ä—Ç, –Ω–æ –∏ –ø—Ä—è–º–∞—è –≤—ã–≥–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–≥–ª–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å {format_currency(benefit)}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ."
        ],
        "–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞": [
            f"{name}, –≤–∞—à–∏ —Ç–æ–ø-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî {top_cats_str}. –° –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π –≤—ã –±—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ 10% –∫–µ—à–±—ç–∫–∞, –∞ –≤–∞—à–∞ –≤—ã–≥–æ–¥–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ –±—ã {format_currency(benefit)}. üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∫–∞—Ä—Ç—É.",
            f"{name}, –≤–∞—à–∞ –≤—ã–≥–æ–¥–∞ —Å –Ω–∞—à–µ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π –º–æ–≥–ª–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å {format_currency(benefit)} –∑–∞ 3 –º–µ—Å—è—Ü–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–µ—à–±—ç–∫—É –≤ –ª—é–±–∏–º—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö. –£–∑–Ω–∞–π—Ç–µ –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –ª–∏–º–∏—Ç.",
            f"–ü–æ–∫—É–ø–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –ª—é–±–∏—Ç–µ, –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ! {name}, —Å –Ω–∞—à–µ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π –≤—ã –±—ã –≤–µ—Ä–Ω—É–ª–∏ {format_currency(benefit)} —Å –≤–∞—à–∏—Ö –æ–±—ã—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫. –ù–∞—á–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—Ç—å."
        ],
        "–î–µ–ø–æ–∑–∏—Ç –°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π": [
            f"{name}, –≤–∞—à –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º –≤–∫–ª–∞–¥–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ {format_currency(benefit)} –≥–æ–¥–æ–≤—ã—Ö. üìà –û—Ç–∫—Ä—ã—Ç—å.",
            f"–ó–∞—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ —Ä–∞–±–æ—Ç–∞—Ç—å! {name}, –≤–∞—à –∫–∞–ø–∏—Ç–∞–ª –º–æ–≥ –±—ã –ø—Ä–∏–Ω–µ—Å—Ç–∏ {format_currency(benefit)} –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –≤ –≥–æ–¥ –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º –¥–µ–ø–æ–∑–∏—Ç–µ. –ù–∞—á–∞—Ç—å –∫–æ–ø–∏—Ç—å."
        ],
        # –î–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–µ–∑ –ø—Ä—è–º–æ–π "—É–ø—É—â–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã" —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª—å–∑–µ
        "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏": [
            f"{name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ —Å –Ω–∏–∑–∫–∏–º –ø–æ—Ä–æ–≥–æ–º –≤—Ö–æ–¥–∞ –∏ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –Ω–∞ —Å—Ç–∞—Ä—Ç–µ. –≠—Ç–æ –ø—Ä–æ—â–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è. –ù–∞—á–Ω–∏—Ç–µ —Å –ª—é–±–æ–π —Å—É–º–º—ã! üöÄ –û—Ç–∫—Ä—ã—Ç—å —Å—á—ë—Ç.",
            f"{name}, –≤–∞—à —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ –±—É–¥—É—â–µ–º. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ –∑–∞—Å—Ç–∞–≤—å—Ç–µ –∫–∞–ø–∏—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å. –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ."
        ],
        "–ö—Ä–µ–¥–∏—Ç –Ω–∞–ª–∏—á–Ω—ã–º–∏": [
            f"{name}, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –∑–∞–ø–∞—Å –Ω–∞ –∫—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞—Ç—ã ‚Äî –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –Ω–∞–ª–∏—á–Ω—ã–º–∏ —Å –≥–∏–±–∫–∏–º–∏ –≤—ã–ø–ª–∞—Ç–∞–º–∏. –£–∑–Ω–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–π –ª–∏–º–∏—Ç –ø—Ä—è–º–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.",
            f"{name}, –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –±–æ–ª—å—à–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –ø–æ–∫—É–ø–∫—É? –ö—Ä–µ–¥–∏—Ç –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø–æ–º–æ–∂–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ –ø–ª–∞–Ω—ã –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ø—Ä–∞–≤–æ–∫ –∏ –æ–∂–∏–¥–∞–Ω–∏–π. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —É—Å–ª–æ–≤–∏—è."
        ]
        # ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    }
    
    product_templates = templates.get(product_name)
    if product_templates:
        return random.choice(product_templates)
    else:
        # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞, –µ—Å–ª–∏ –≤—ã–≥–æ–¥–∞ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é –∏–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
        if benefit > 0:
            return f"{name}, —É –Ω–∞—Å –µ—Å—Ç—å –¥–ª—è –≤–∞—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É ¬´{product_name}¬ª —Å –≤—ã–≥–æ–¥–æ–π –¥–æ {format_currency(benefit)}. –£–∑–Ω–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. üòä"
        else:
            return f"{name}, —É –Ω–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É ¬´{product_name}¬ª. –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. üòâ"

def generate_push_notification(product_name: str, full_data: Dict[str, Any], benefit: float) -> str:
    try:
        # ... (–æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–∑–æ–≤–∞ Gemini) ...
        profile = full_data['profile']
        hook = _create_hook(product_name, full_data)
        
        task = "" # –õ–æ–≥–∏–∫–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–∞—á–∏ –¥–ª—è Gemini
        if product_name == "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏":
            task = "..."
        # ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
        
        prompt = f"""...""" # –ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini
        
        response = model.generate_content(prompt)
        if not response.text or response.text.isspace():
             raise ValueError("API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.")
        return response.text.strip().replace('"', '').replace('*', '')
    except Exception as e:
        print(f"!!! –û–®–ò–ë–ö–ê GEMINI API: {e}. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
        return _generate_fallback_notification(product_name, full_data, benefit)